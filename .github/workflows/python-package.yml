# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - name: Check out repository code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache Python modules
      uses: actions/cache@v3
      env:
        cache-name: cache-python-modules
      with:
        path: ~/.python
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip flake8 black wheel
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Lint with black
      uses: wearerequired/lint-action@v1
      with:
        black: true
        black_extensions: py,py_disabled
        auto_fix: true

    - name: Lint with isort
      uses: isort/isort-action@master

    # Setup Python (faster than using Python container)
    - name: Setup Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Switch to Current Branch
      run: git checkout ${{ env.BRANCH }}

    - name: Install dependencies
      run: |
        sudo apt install libxml2-dev libxslt-dev python3-dev libgeoip-dev ssdeep libfuzzy-dev
        python -m pip install --disable-pip-version-check 'setuptools<58'  # https://github.com/pycrypto/pycrypto/issues/327
        python -m pip install --disable-pip-version-check --no-deps -r requirements.txt
        python -m pip install --disable-pip-version-check -r requirements.github.txt
        python -m pip install --disable-pip-version-check -r requirements.tests.in

    - name: Run unit tests
      run: python -m pytest --import-mode=append tests/
