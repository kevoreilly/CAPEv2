[aws]
# Specify the AWS Region (for example, us-west-1)
region_name = us-east-1

# Specify the Availability Zone(for example, us-west-1a) to create a new volume (used at machine's restoration).
availability_zone = us-east-1a

# Access keys consist of two parts: an access key ID (for example, AKIAIOSFODNN7EXAMPLE)
# and a secret access key (for example, wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY).
# To create access keys for your AWS account root user, you must use the AWS Management Console.
aws_access_key_id = AWS_ACCESS_KEY
aws_secret_access_key = AWS_SECRET_KEY

# Specify a comma-separated list of available machines to be used.
# Each machine will be represented by the instance-id (for example, i-05f07711c635f817f).
# For each specified instance-id you have to define a dedicated section containing the details
# on the respective machine. (E.g. i-05f07711c635f817f,i-04d465547cba1af5e)
# For better performance, it is recommended to leave this empty and set autoscale = yes.
machines =

# Default network interface.
interface = eth0

# To improve the performance, running_machines_gap is number of machines that are ready to perform a task (up and running).
# running_machines_gap is the size of a pool which contains machines that were already started in advance.
# Whenever a machine from the pool starts a task, the machinery will start another new machine.
# In a scenario where all the list of machines are occupied, and autoscale mode is on, the machinery will instantly
# scale up by creating new machines.
# Thus, there will always be a constant number of ready machines for the user's requests.
# It is recommended to set this value to 1 and above.
running_machines_gap = 1

# In a scenario where all the configured machines are occupied, the machinery will instantly scale up by creating
# new machines and adding them to the Cuckoo internal database (DB). The new machines will be terminated after use.
# The user can choose to prepare any number of machines, but does not have to (if autoscale in on).
[autoscale]

# Enable auto-scale in cuckoo(by setting autoscale = yes). recommended for better performance.
autoscale = yes

# Specify the maximum number of online machines that was created as a result of auto-scale operation.
# Once reaching that limit, cuckoo will create a new machine only if another was terminated.
# This limit prevents a situation of creating machine beyond the subnet capacity.
dynamic_machines_limit = 2

# Specify the Amazon Machine Image (AMI). It required to launch a new instance.
# You should create an image from the guest machine.
image_id = ami-abcdefgh123456789

# Specify the machine's instance type(for example, t2.small)
instance_type = t2.medium

# Specify the subnet id where the machines will be placed
subnet_id = subnet-abcd1234

# Specify a comma-separated list of security groups IDs that will be associated with the machines.
# On the Cuckoo default settings ,the security groups must allow tcp ports 2042,8000 and 8090 on the inbound.
security_groups = sg-abcdefgh123456789

# Specify the operating system platform used by the new machine
# [windows/darwin/linux].
platform = windows

# Default network interface.
interface =

# Mostly unused for now. Please don't fill it out.
options =

# (Optional) Set your own tags. These are comma separated and help to identify
# specific VMs. You can run samples on VMs with tag you require.
tags =

# Specify the IP of the Result Server, as your virtual machine sees it.
# It should be the nest ip address.
resultserver_ip =

# Specify a port number to bind the result server on.
resultserver_port = 2042



# This section is just a template for one pre-configured machine, if you choose to use it.
# For better performance, it is best to leave it blank and let the auto-scaling to control the machines.

[i-0123456789abcdef]
# Specify the label name.
# Label would be the instance-id of the current machine as specified in your AWS account.
label = i-0123456789abcdef

# Specify the operating system platform used by current machine
# [windows/darwin/linux].
platform = windows

# Specify the IP address of the current virtual machine. Make sure that the
# IP address is valid and that the host machine is able to reach it. If not,
# the analysis will fail.
ip =

# Specify the snapshot-id to use. it is used when creating a new volume when restoring a machine.
# You should create a snapshot from the guest machine.
snapshot =

# (Optional) Specify the name of the network interface that should be used
# when dumping network traffic from this machine with tcpdump. If specified,
# overrides the default interface specified above.
# Example (eth0 is the interface name):
interface =

# (Optional) Specify the IP of the Result Server, as your virtual machine sees it.
# The Result Server will always bind to the address and port specified in cuckoo.conf,
# however you could set up your virtual network to use NAT/PAT, so you can specify here
# the IP address for the Result Server as your machine sees it. If you don't specify an
# address here, the machine will use the default value from cuckoo.conf.
# NOTE: if you set this option you have to set result server IP to 0.0.0.0 in cuckoo.conf.
# Example:
resultserver_ip =

# (Optional) Specify the port for the Result Server, as your virtual machine sees it.
# The Result Server will always bind to the address and port specified in cuckoo.conf,
# however you could set up your virtual network to use NAT/PAT, so you can specify here
# the port for the Result Server as your machine sees it. If you don't specify a port
# here, the machine will use the default value from cuckoo.conf.
resultserver_port =

# (Optional) Set your own tags. These are comma separated and help to identify
# specific VMs. You can run samples on VMs with tag you require.
tags =

# Mostly unused for now. Please don't fill it out.
options =
