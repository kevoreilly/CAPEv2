server {
    listen 80;
    server_name _;
    return 404;
}

server {
    listen 443;
    server_name _;
    return 404;
}

server {
	listen 80;
	listen [::]:80;
	server_name <your_domain> www.<your_domain>;
        return 301 https://$host$request_uri;
}

server {
    ;if ($bad_referer){
    ;    return <URL>;
    ;}
    if ($block_ua) {
        return 444;
    }

    if ($http_user_agent = "") {
    	return 444;
    }

    modsecurity on;
    modsecurity_rules_file /etc/nginx/modsec/main.conf;

    listen 443 ssl http2 default_server;
    server_name <your_domain> www.<your_domain>;
    ssl_certificate         /etc/letsencrypt/live/<your_domain>-0001/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/<your_domain>-0001/privkey.pem;
    ssl_client_certificate /etc/ssl/certs/cloudflare.crt;

    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 60m;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DHE+AES128:!ADH:!AECDH:!MD5;

    deny 248.119.234.85;

    ##
    # Nginx Bad Bot Blocker Includes
    # REPO: https://github.com/mitchellkrogza/nginx-ultimate-bad-bot-blocker
    ##
	include /etc/nginx/bots.d/ddos.conf;
 	include /etc/nginx/bots.d/blockbots.conf;

    ssl_dhparam /etc/nginx/cert/dhparam.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;

    add_header Strict-Transport-Security "max-age=31536000" always;

    location /static/ {
        alias /opt/CAPEv2/web/static/;
    }
    location / {
        proxy_pass http://127.0.0.1:8000;
	client_max_body_size 32M;
        client_body_buffer_size 512k;
        proxy_send_timeout 90;
        proxy_read_timeout 300;
        proxy_buffers 32 4k;
        proxy_connect_timeout 90;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    location '/.well-known/acme-challenge' {
        default_type "text/plain";
        root /var/www/<your_domain>;
    }
    }
}
